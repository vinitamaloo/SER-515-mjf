{"ast":null,"code":"var _jsxFileName = \"/Users/piyush/GitHub/SER-515-mjf/src/Register/register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [cpassword, setCpassword] = useState(\"\");\n  const [errors, setErrors] = useState({\n    \"name\": \"\",\n    \"email\": \"\",\n    \"password\": \"\",\n    \"cpassword\": \"\"\n  });\n  const [isValid, setValid] = useState(true);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (validate()) {\n      alert('Demo Form is submited');\n    }\n  }\n\n  function validate() {\n    setValid(true);\n\n    if (!name) {\n      setValid(false);\n      setErrors({\n        \"name\": \"Name cannot be empty\"\n      });\n      console.log({\n        errors\n      });\n    }\n\n    if (!email) {\n      setValid(false);\n      setErrors({\n        \"email\": \"Please enter your email Address\"\n      });\n    }\n\n    if (!password) {\n      setValid(false);\n      setErrors({\n        \"password\": \"Please enter your password\"\n      });\n    }\n\n    if (!cpassword) {\n      setValid(false);\n      setErrors({\n        \"cpassword\": \"Please re-enter your password\"\n      });\n    }\n\n    if (typeof password !== \"undefined\" && typeof cpassword !== \"undefined\") {\n      if (password !== cpassword) {\n        setValid(false);\n        setErrors({\n          \"password\": \"Passwords don't match\"\n        });\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registerall\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"User\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          autoFocus: true,\n          type: \"name\",\n          placeholder: \"Enter Your full name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger\",\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"Email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter Your email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"Password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Enter Your Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"ConfirmPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Confirm Your Password\",\n          value: cpassword,\n          onChange: e => setCpassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"User Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        \"aria-label\": \"Usertype\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Public\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"Player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"Coach\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"Referee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"4\",\n          children: \"Refree Director\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"5\",\n          children: \"Team Director\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"form-input-login\",\n        children: [\"Already have an account? Login \", /*#__PURE__*/_jsxDEV(Link, {\n          className: \"nav-link\",\n          to: \"/sign-in\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 79\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"FOA+lQzAXvZyxhzq0J6sdGsj/Cc=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/piyush/GitHub/SER-515-mjf/src/Register/register.js"],"names":["React","useState","Form","Button","BrowserRouter","Router","Switch","Route","Link","Login","name","setName","email","setEmail","password","setPassword","cpassword","setCpassword","errors","setErrors","isValid","setValid","handleSubmit","event","preventDefault","validate","alert","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nexport default function Login() {\n\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [cpassword, setCpassword] = useState(\"\");\n    const [errors, setErrors] = useState({\n        \"name\" : \"\",\n        \"email\" : \"\",\n        \"password\" : \"\",\n        \"cpassword\" : \"\"\n    });\n    const [isValid, setValid] = useState(true);\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        if(validate()) {\n            alert('Demo Form is submited');\n        }\n\n    }\n\n    function validate() {\n        setValid(true);\n\n        if (!name) {\n            setValid(false);\n            setErrors({\"name\" : \"Name cannot be empty\"});\n            console.log({errors});\n        }\n\n        if (!email) {\n            setValid(false);\n            setErrors({\"email\" : \"Please enter your email Address\"});\n        }\n        \n        if (!password) {\n            setValid(false);\n            setErrors({\"password\" : \"Please enter your password\"});\n        }\n\n        if (!cpassword) {\n            setValid(false);\n            setErrors({\"cpassword\" : \"Please re-enter your password\"});\n        }\n\n        if (typeof password !== \"undefined\" && typeof cpassword !== \"undefined\") { \n            if (password !== cpassword) {\n                setValid(false);\n                setErrors({\"password\" : \"Passwords don't match\"});\n            }\n        } \n    }\n\n\n    return (\n        <div className=\"registerall\">\n        <Form onSubmit={handleSubmit}>\n            {/* <h1> Get started with today! Create your account by filling the information below</h1> */}\n            <Form.Group className=\"mb-3\" controlId=\"User\">\n                <Form.Label>Full Name</Form.Label>\n                <Form.Control \n                    autoFocus \n                    type=\"name\" \n                    placeholder=\"Enter Your full name\"  \n                    value={name}\n                    onChange={(e) => setName(e.target.value)}/>\n                <div className=\"text-danger\">{errors.name}</div>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"Email\">\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control \n                    type=\"email\" \n                    placeholder=\"Enter Your email\" \n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}/>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"Password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control \n                    type=\"password\" \n                    placeholder=\"Enter Your Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)} />\n                <Form.Text className=\"text-muted\">Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.</Form.Text>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"ConfirmPassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control \n                    type=\"password\" \n                    placeholder=\"Confirm Your Password\"\n                    value={cpassword}\n                    onChange={(e) => setCpassword(e.target.value)} />\n            </Form.Group>\n            <Form.Label>User Type</Form.Label>\n            <Form.Select aria-label=\"Usertype\">\n                <option value=\"\">Public</option>\n                <option value=\"1\">Player</option>\n                <option value=\"2\">Coach</option>\n                <option value=\"3\">Referee</option>\n                <option value=\"4\">Refree Director</option>\n                <option value=\"5\">Team Director</option>\n            </Form.Select>\n            <Button variant=\"primary\" type=\"submit\">Register</Button>\n            <span className=\"form-input-login\">Already have an account? Login <Link className=\"nav-link\" to={\"/sign-in\"}>Login</Link></span>\n            </Form>\n            </div>\n        );\n}\n\n"]},"metadata":{},"sourceType":"module"}